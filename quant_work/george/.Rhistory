N = 440
4*(2*N*1000)^(10)*exp(-(1/8)*N*1000*0.05^2)
N = 460
4*(2*N*1000)^(10)*exp(-(1/8)*N*1000*0.05^2)
N = 480
4*(2*N*1000)^(10)*exp(-(1/8)*N*1000*0.05^2)
N = 400
4*(2*N*1000)^(10)*exp(-(1/8)*N*1000*0.05^2)
N = 460
0.95-4*(2*N*1000)^(10)*exp(-(1/8)*N*1000*0.05^2)
N = 440
0.95-4*(2*N*1000)^(10)*exp(-(1/8)*N*1000*0.05^2)
N = 460
1-4*(2*N*1000)^(10)*exp(-(1/8)*N*1000*0.05^2)
1-0.95
source('~/.active-rstudio-document')
head(dataIn)
head(YIn)
head(XIn)
head(YIn)
head(permuted.ind)
v
wo+eta*(YIn[j] * XIn[j,]) / (1 + exp(YIn[j] * (XIn[j,] %*% w0)));
w0+eta*(YIn[j] * XIn[j,]) / (1 + exp(YIn[j] * (XIn[j,] %*% w0)));
w
j
w
XIn[j,]
head(XIn)
w0
w
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
w0
w
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
q
q
q
q
q
q
q
q
source('~/.active-rstudio-document')
w
w0
norm(w-w0)
fnorm(w-w0)
normf(w-w0)
norm(w-w0,'fro')
norm(w-w0,"F")
head(nEpoc)
head(nEpochs)
head(outX1.ind)
head(outCoords)
dim(outCoords)
size(outCoords)
head(outX1)
head(outX2)
head(dataOut)
head(dataOut)
head(YOut)
nOut
eOut
w
w0
nEpoch
head(nEpochs)
head(nEpochs)
q
q
source('~/.active-rstudio-document')
head(nEpochs)
head(avgEOut)
source('~/.active-rstudio-document')
avgEOut
avgNEpoch
source('~/.active-rstudio-document')
avgEOut
avgNEpoch
source('~/myGitCode/ML/homeWorks/homeWork5/question8_i.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/myGitCode/ML/homeWorks/homeWork5/question8_i.R')
source('~/myGitCode/ML/homeWorks/homeWork5/question8_i.R')
head(training_data)
perm
N
w
source('~/.active-rstudio-document')
source('~/myGitCode/ML/homeWorks/homeWork5/question8_i.R')
head(training_data)
12*6.5 + 15*8.95
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
posA
posB
medA
medB
retListA
retListB
posA
posB
medA
medB
retListA
retListB
posA
a
b
median(1,2,3)
median(c(1,2,3))
median(c(1,3))
median(c(1,4))
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
tmpListA
tmpListB
tmpListA
tmpListB
posA
posB
medA
medB
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
tmpListA
tmpListB
merge(tmpListA,tmpListB)
c(tmpListA,tmpListB)
median(c(tmpListA,tmpListB))
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
tmpListA
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
median(c(tmpListA,tmpListB))
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
median(c(tmpListA,tmpListB))
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=F)
source('~/myGitCode/hipMunk/onsite.R', echo=F)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=F)
source('~/myGitCode/hipMunk/onsite.R', echo=F)
sample(1:10,1)
sample(1:10,1)
sample(1:10,3)
sample(1:100,3)
sort(sample(1:100,3))
sort(sample(1:100,3))
sort(sample(1:100,3))
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=F)
a
b
median(c(a,b))
c(a,b)
sort(c(a,b))
65+71
0.5(65+71)
0.5*(65+71)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
tmpListA
tmpListB
median(c(tmpListA,tmpListB))
a
b
median(c(a,b))
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
tmpListA
tmpListB
medA
medB
retListA
retListB
medA
medB
retListA
retListB
retListA
retListB
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
q
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
a
b
median(c(a,b))
sort(c(a,b))
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
median(c(a,b))
source('~/myGitCode/hipMunk/onsite.R', echo=TRUE)
median(c(a,b))
sort(c(a,b))
source('~/myGitCode/codesAlgo/myCodeR/bubble_sort.R', echo=TRUE)
a = c(3,4,2,5,7)
bubble_sort(a)
source('~/myGitCode/codesAlgo/myCodeR/bubble_sort.R', echo=TRUE)
tmpArray
source('~/myGitCode/codesAlgo/myCodeR/bubble_sort.R', echo=TRUE)
duplet
source('~/myGitCode/codesAlgo/myCodeR/bubble_sort.R', echo=TRUE)
tmpArray[[1]][i:(i+1)]
i
tmpArray[[1]]
tmpArray[[1]][1]
source('~/myGitCode/codesAlgo/myCodeR/bubble_sort.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
b
a
source('~/myGitCode/codesAlgo/myCodeR/bubble_sort.R', echo=TRUE)
duplet
duplet
source('~/myGitCode/codesAlgo/myCodeR/bubble_sort.R', echo=TRUE)
duplet
tmpList
tmpArray
i
duplet
tmpArray
tmpArray
tmpArray
source('~/myGitCode/codesAlgo/myCodeR/bubble_sort.R', echo=TRUE)
tmpArray
newArray
newArray
newArray
newArray
tmpArray
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=TRUE)
a
dim(a)
a <- as.array(round(runif(10,0,10)))
dim(a)
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=TRUE)
tmpArray
st
ed
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=F)
tmpArray
pvt
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=TRUE)
tmpArray
tmpArray
tmpArray
tmpArray
tmpArray
tmpArray
tmpArray
tmpArray
tmpArray
st
int1
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=F)
int1
st
tmpArray
tmpArray
tmpArray
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=TRUE)
j
tmpArray
strArray
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/quick_sort.R', echo=TRUE)
st
ed
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/my_union.R', echo=F)
a = 1
a +=1
a += 1
source('~/myGitCode/codesAlgo/myCodeR/check_sum.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/check_sum.R', echo=F)
source('~/myGitCode/codesAlgo/myCodeR/check_sum.R', echo=TRUE)
source('~/myGitCode/codesAlgo/myCodeR/check_sum.R', echo=TRUE)
rnorm(1000)
mean(rnorm(1000))
mean(rnorm(10000))
mean(rnorm(10000)^2)
mean(rnorm(100000)^2)
var(rnorm(100000)^2)
var(rnorm(1000000)^2)
2^10
1/2^10
100/2^10
source('~/myGitCode/genApSys/challenge.R')
all_rms
source('~/myGitCode/genApSys/challenge.R')
save(all_rms, file="all_rms.Rda")
pdf("SenA.pdf")
ggplot(data.frame(all_rms[,1], all_rms[,2],all_rms[,3],all_rms[,4],all_rms[,5],all_rms[,6]),aes(sigma2, colour=)) +
geom_line(aes(y=all_rms[,1], color = "Var. Z = 0.01")) +
geom_point(aes(y=all_rms[,1], color ="")) +
geom_line(aes(y=all_rms[,2], color ="Var. Z = 0.10")) +
geom_point(aes(y=all_rms[,2], color ="")) +
geom_line(aes(y=all_rms[,3], color ="Var. Z = 0.50")) +
geom_point(aes(y=all_rms[,3], color ="")) +
geom_line(aes(y=all_rms[,4], color ="Var. Z = 0.90")) +
geom_point(aes(y=all_rms[,4], color ="")) +
geom_line(aes(y=all_rms[,5], color ="Var. Z = 1.0")) +
geom_point(aes(y=all_rms[,5], color ="")) +
geom_line(aes(y=all_rms[,6], color ="Var. Z = 1.3")) +
geom_point(aes(y=all_rms[,6], color ="")) +
scale_color_manual(values=c("black","red","blue","magenta","dark green","yellow", "brown")) +
labs(x=expression('Variance of A'["n"]), y="rms") +
ggtitle(bquote('Sensitivity to '*A[n]*' '))
dev.off()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
ggplot(data.frame(all_rms[,1], all_rms[,2],all_rms[,3],all_rms[,4],all_rms[,5],all_rms[,6]),aes(sigma2, colour=)) +
geom_line(aes(y=all_rms[,1], color = "Var. Z = 0.01")) +
geom_point(aes(y=all_rms[,1], color ="")) +
geom_line(aes(y=all_rms[,2], color ="Var. Z = 0.10")) +
geom_point(aes(y=all_rms[,2], color ="")) +
geom_line(aes(y=all_rms[,3], color ="Var. Z = 0.50")) +
geom_point(aes(y=all_rms[,3], color ="")) +
geom_line(aes(y=all_rms[,4], color ="Var. Z = 0.90")) +
geom_point(aes(y=all_rms[,4], color ="")) +
geom_line(aes(y=all_rms[,5], color ="Var. Z = 1.0")) +
geom_point(aes(y=all_rms[,5], color ="")) +
geom_line(aes(y=all_rms[,6], color ="Var. Z = 1.3")) +
geom_point(aes(y=all_rms[,6], color ="")) +
scale_color_manual(values=c("black","red","blue","magenta","dark green","yellow", "brown")) +
labs(x=expression('Variance of A'["n"]), y="rms") +
ggtitle(bquote('Sensitivity to '*A[n]*' '))
dev.off()
dev.off()
pdf("SenA1.pdf")
ggplot(data.frame(all_rms[,1], all_rms[,2],all_rms[,3],all_rms[,4],all_rms[,5],all_rms[,6]),aes(sigma2, colour=)) +
geom_line(aes(y=all_rms[,1], color = "Var. Z = 0.01")) +
geom_point(aes(y=all_rms[,1], color ="")) +
geom_line(aes(y=all_rms[,2], color ="Var. Z = 0.10")) +
geom_point(aes(y=all_rms[,2], color ="")) +
geom_line(aes(y=all_rms[,3], color ="Var. Z = 0.50")) +
geom_point(aes(y=all_rms[,3], color ="")) +
geom_line(aes(y=all_rms[,4], color ="Var. Z = 0.90")) +
geom_point(aes(y=all_rms[,4], color ="")) +
geom_line(aes(y=all_rms[,5], color ="Var. Z = 1.0")) +
geom_point(aes(y=all_rms[,5], color ="")) +
geom_line(aes(y=all_rms[,6], color ="Var. Z = 1.3")) +
geom_point(aes(y=all_rms[,6], color ="")) +
scale_color_manual(values=c("black","red","blue","magenta","dark green","yellow", "brown")) +
labs(x=expression('Variance of A'["n"]), y="rms") +
ggtitle(bquote('Sensitivity to '*A[n]*' '))
dev.off()
pdf("SenZ1.pdf")
ggplot(data.frame(all_rms[,1], all_rms[2,],all_rms[3,],all_rms[4,],all_rms[5,],all_rms[6,]),aes(sigma2, colour=)) +
geom_line(aes(y=all_rms[1,], color = 'Var. An = 0.01')) +
geom_point(aes(y=all_rms[1,], color ="")) +
geom_line(aes(y=all_rms[2,], color ="Var. An = 0.10")) +
geom_point(aes(y=all_rms[2,], color ="")) +
geom_line(aes(y=all_rms[3,], color ="Var. An = 0.50")) +
geom_point(aes(y=all_rms[3,], color ="")) +
geom_line(aes(y=all_rms[4,], color ="Var. An = 0.90")) +
geom_point(aes(y=all_rms[4,], color ="")) +
geom_line(aes(y=all_rms[5,], color ="Var. An = 1.0")) +
geom_point(aes(y=all_rms[5,], color ="")) +
geom_line(aes(y=all_rms[6,], color ="Var. An = 1.3")) +
geom_point(aes(y=all_rms[6,], color ="")) +
scale_color_manual(values=c("black","red","blue","magenta","dark green","yellow", "brown")) +
labs(x=expression('Variance of Z'), y="rms") +
ggtitle(bquote('Sensitivity to Z'))
dev.off()
source('~/myGitCode/ML/homeWorks/homeWork1/testPercep.R')
source('~/myGitCode/ML/homeWorks/homeWork1/testPercep.R')
fit
val
store_prb
sum(store_prb$verify)
sum(store_prb$verify)/100
factorial(260)
(5/6)^5
factorial(100)
factorial(100)/factorial(50)
factorial(100)/factorial(50)/factorial(100)
factorial(100)/(factorial(50)*factorial(50))
factorial(100)/(factorial(50)*factorial(50))*(0.5)^100
range(1,100)
xrange(1,100)
range(1,100,1)
seq(1,100,1)
tmp=1/seq(1,100,1)
tmp
sum(tmp)
1/sum(tmp)
38*8+300+68+128
800/256
800/256 - 0.5
800/256 - 0.5 + 1/32
1(1/16 * 1/4 * 2) + 2(1/4 * 1/4 + 1/16 * 1/2 + 1/2) + 3 (1/4 + 1/4 * 1/2) + 4 (1/16 * 1/16 + 1/4 * 1/4 + 1/16) + 5(1/4 * 1/16)
1*(1/16 * 1/4 * 2) + 2*(1/4 * 1/4 + 1/16 * 1/2 + 1/2) + 3*(1/4 + 1/4 * 1/2) + 4*(1/16 * 1/16 + 1/4 * 1/4 + 1/16) + 5*(1/4 * 1/16)
28/16 + 2 * 5/16
1*(1/16 * 1/4 * 2) + 2*(1/4 * 1/4 + 1/16 * 1/2 + 1/2) + 3*(1/4 + 1/4 * 1/2) + 4*(1/16 * 1/16 + 1/4 * 1/4 + 1/16)
1*(1/16 * 1/4 * 2) + 2*(1/16 * 1/2 + 1/2) + 3 (1/4 + 1/4 * 1/4) + 4 (1/16 * 1/16 + 1/16)
1*(1/16 * 1/4 * 2) + 2*(1/16 * 1/2 + 1/2) + 3*(1/4 + 1/4 * 1/4) + 4*(1/16 * 1/16 + 1/16)
1*(1/16 * 1/4 * 2) + 2*(1/16 * 1/2 + 1/2) + 3*(1/4 + 1/16* 1/4) + 4 *(1/16 * 1/16 + 1/16)
1*(1/16 * 1/4 * 2) + 2*(1/16 * 6/16 + 6/16) + 3*(1/4 + 1/16* 1/4) + 4 *(1/16 * 1/16 + 1/16)
(28/16)^2 + 0.5
4 + 6*2 + 4*3 +4*1
1/16 + 4/16
2*(1/16 + 4/16)
2*6 + 3*4 + 4*1
28/16 + 0.625
1*(1/16 * 1/4 * 2 + 1/4 * 1/4) + 2*(1/16 * 6/16 + 6/16) + 3*(1/4 + 1/16* 1/4) + 4 *(1/16 * 1/16 + 1/16)
1*(1/16 * 1/4 + 1/4 * 1/4) + 2*(1/16 * 6/16 + 6/16) + 3*(1/4 + 1/16* 1/4) + 4 *(1/16 * 1/16 + 1/16)
1*(1/16 * 1/4 + 1/4 * 1/4) + 2*(1/16 * 6/16 + 6/16 + 1/4 * 6/16) + 3*(1/4 + 1/16* 1/4) + 4 *(1/16 * 1/16 + 1/16)
1*(1/16 * 1/4 + 1/4 * 1/4) + 2*(1/16 * 6/16 + 6/16 + 1/4 * 6/16) + 3*(1/4 + 1/16* 1/4 + 1/4*1/16) + 4 *(1/16 * 1/16 + 1/16)
1*(1/16 * 1/4 + 1/4 * 1/4) + 2*(1/16 * 6/16 + 6/16 + 1/4 * 6/16) + 3*(1/4 + 1/16* 1/4 + 1/4*1/16) + 4 *(1/16 * 1/16 + 1/16 + 1/4*1/16)
5/3
90/36
unif(4)
runif(4)
mean(runif(100))
mean(runif(1000))
source('~/myGitCode/myProj/myCodeR/dice.R')
source('~/myGitCode/myProj/myCodeR/dice.R')
source('~/myGitCode/myProj/myCodeR/dice.R')
seq(1,3)
source('~/myGitCode/myProj/myCodeR/dice.R')
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
i
k
k
i
i*6
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
dif
q
q
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
dif
q
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
mean(dif)
70/36
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
mean(dif)
5/3
35/18
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
mean(dif)
70/36
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
N = 10000
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
2^7
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
source('~/myGitCode/myProj/myCodeR/dice.R', echo=TRUE)
source('~/myGitCode/myProj/myCodeR/dice.R')
source('~/myGitCode/myProj/myCodeR/dice.R')
source('~/myGitCode/myProj/myCodeR/dice.R')
source('~/myGitCode/myProj/myCodeR/dice.R')
2-2*(0.5)^(1/3)
4/7
2-2*(0.5)^(3)
-2+2*(0.5)^(3)
-2+2*(0.5)^(1/3)
-2+2*(0.5)^(1)
-2+2*(0.5)^(2/3)
7.5^7.5
7^8
8^7
7^7
8^8
6+6/2+6/3+6/4+6/5+6/6
source('~/myGitCode/quant/george/momentumV3.R', echo=TRUE)
View(ret)
source('~/myGitCode/quant/george/momentumV3.R', echo=TRUE)
View(ord)
View(winners)
View(losers)
View(ret)
View(VIX)
View(adj_ret)
