sp=exp(reg_gam$mu.coefficients[1] * 1500)
sp/(1+sp)
reg_gam <- gamlss(in_qt_ratio ~ 0 + hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
fitted(reg_gam)
sp=exp(reg_gam$mu.coefficients[1] * 1500)
sp/(1+sp)
reg_gam <- gamlss(in_qt_ratio ~ 0 + hr, data=tmp_data,
family=BEINF(mu.link = "log", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
fitted(reg_gam)
sp=exp(reg_gam$mu.coefficients[1] * 1500)
sp
reg_gam <- gamlss(in_qt_ratio ~ hr, data=tmp_data,
family=BEINF(mu.link = "log", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
reg_gam <- gamlss(in_qt_ratio ~ (hr-1), data=tmp_data,
family=BEINF(mu.link = "log", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
close tmp_ep
close(tmp_ep)
tmp_data <- tmp_ep[,1];
tmp_data <- cbind(tmp_data,seq(0,1501));
colnames(tmp_data)[2] <- "hr";
reg_gam <- gamlss(in_qt_ratio ~ hr, data=tmp_data,
family=BEINF(mu.link = "log", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
Virew(tmp_data)
View(tmp_data)
ep <- endpoints(ratio_date,'hours');
tmp_ep <- period.apply(ratio_date[,2],ep,mean);
tmp_data <- tmp_ep[,1];
tmp_data <- cbind(tmp_data,seq(1,1502));
colnames(tmp_data)[2] <- "hr";
reg_gam <- gamlss(in_qt_ratio ~ hr, data=tmp_data,
family=BEINF(mu.link = "log", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
View(tmp_data)
reg_gam <- gamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "log", sigma.link = "log", nu.link = "log", tau.link = "log"))
View(tmp_data)
tmp_sum <- summary(reg_gam)
reg_gam <- gamlss(in_qt_ratio ~ hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
reg_gam <- gamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
cor(tmp_data[,1],tmp_data[,2])
reg_cens <- censReg(mod_ratio ~ hr, data = ratio_date, left = 0, right = 1)
library("censReg", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
reg_cens <- censReg(mod_ratio ~ hr, data = ratio_date, left = 0, right = 1)
summary(reg_cens)
hist(reg_cens$df.residual)
plot(ratio_date[,"in_qt_ratio"])
plot(ratio_date[,"in_qt_ratio"])
reg_gam$mu.coefficients
exp(reg_gam$mu.coefficients)
reg_gam <- gamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
exp(reg_gam$mu.coefficients)
tmp_sum <- summary(reg_gam)
exp(reg_gam$mu.coefficients)
exp(reg_gam$mu.coefficients)-1
100*(exp(reg_gam$mu.coefficients)-1)
2300*(exp(reg_gam$mu.coefficients)-1)
2300*(reg_gam$mu.coefficients)
1*(reg_gam$mu.coefficients)
2300*(reg_gam$mu.coefficients)
head(tmp_data)
plot(reg_gam$residuals)
my_res<- exp(reg_gam$residuals)
my_res<- my_res/(1+my_res)
plot(my_res)
hist(my_res)
shapiro.test(my_res)
pdf(file = ifelse(TRUE, "scat_fit.pdf"));           # Save plot.
plot(as.numeric(tmp_data[,2]),as.numeric(tmp_data[,1]), xlab="Hours", ylab = "Ratio", main="Quote-to-invite ratio Vs Hour")
lines(seq(1,1502),fitted(reg_gam),col="blue",pch=25,lwd=3)
dev.off();
pdf(file = ifelse(TRUE, "scat_fit.pdf"));           # Save plot.
plot(as.numeric(tmp_data[,2]),as.numeric(tmp_data[,1]), xlab="Hours", ylab = "Quote-to-invite ratio", main="Fitted model")
lines(seq(1,1502),fitted(reg_gam),col="blue",pch=25,lwd=3)
dev.off();
pdf(file = ifelse(TRUE, "res_dist.pdf"));           # Save plot.
hist(my_res, main="Distribution of Residuals",
xlab="Residual", ylab="Frequency", pch=19);
dev.off();
reg_gam$mu.coefficients
coef(reg_gam)
tmp_sum
2.149e-5/sqrt(1502)
z_bounds<-1.96 * 2.149e-5/sqrt(1502)
mean(tmp_data[,1])
head(tmp_data)
mean(tmp_data[,1]) + z_bounds;
mean(tmp_data[,1]) - z_bounds;
z_bounds<-3.29 * 2.149e-5/sqrt(1502);
mean(tmp_data[,1]) - z_bounds;
mean(tmp_data[,1]) + z_bounds;
predict(reg_gam,tmp_data,interval="confidence")
prof.dev(reg_gam,perc="95")
prof.dev(reg_gam,perc=95)
prof.term(reg_gam,perc=95,min=0,max=1)
prof.term(reg_gam,perc=95,min=1,max=1)
prof.term(reg_gam,perc=95,min=1,max=1.1)
prof.term(reg_gam,perc=95,min=0.1,max=1.1)
prof.dev(reg_gam, which="mu", min=-.12, max=.1, step=.01)
prof.dev(reg_gam, which="mu", min=0, max=1, step=.01)
prof.dev(reg_gam, which="mu", min=0, max=0.99, step=.01)
prof.dev(reg_gam, which="mu", min=0.4, max=0.7, step=.01)
prof.dev(reg_gam, which="mu", min=0.5, max=0.55, step=.001)
prof.dev(reg_gam, which="mu", min=0.51, max=0.53, step=.001)
reg_gam <- gamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum
tmp_sum <- summary(reg_gam)
confint(reg_gam,level = 95)
confint(reg_gam,level = .95)
confint(reg_gam,hr,level = .95)
confint(reg_gam,"hr",level = .95)
confint(reg_gam,"hr",level = .99)
z_bounds<-3.29 * 2.149e-5/sqrt(1502);
z_bounds
reg_gam$mu.coefficients
z_bounds<-1.96  * 2.149e-5/sqrt(1502);
mean(tmp_data[,1]) + z_bounds;
confint(reg_gam,"hr",level = .95)
reg_gam$mu.coefficients
2300*(reg_gam$mu.coefficients)
1*(reg_gam$mu.coefficients)
9*3.75
9*3.75/3.475
23900*(reg_gam$mu.coefficients)
9*(1+2.86/100)
2400-1
100*(2400-1)
100*(2400-1)*(reg_gam$mu.coefficients)
9*(1+28.68/100)
115.812/12.5812
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
plot(seq(1,1502),tmp_data[,1], main="Invite-to-Quote Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
lineplot(seq(1,1502),tmp_data[,1], main="Invite-to-Quote Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
line(seq(1,1502),tmp_data[,1], main="Invite-to-Quote Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
line(tmp_data, main="Hourly Invite-to-Quote Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19);
dev.off();
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
line(tmp_data, main="Hourly Invite-to-Quote Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
line(tmp_data[,1], main="Hourly Invite-to-Quote Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
plot(tmp_data[,1], main="Hourly Invite-to-Quote Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19);
dev.off();
pdf(file = ifelse(TRUE, "hr_dist.pdf"));           # Save plot.
hist(tmp_ep[,1], main="Distribution of Hourly Invite-to-Quote Ratio per Hour",
xlab="Ratio", ylab="Frequency", pch=19);
dev.off();
View(ratio_date)
View(tmp_data)
dd[with(dd, order(-z, b)), ]
ratio_date[with(ratio_date, order(category_id,sp_usr_id))]
ratio_date_cat <- ratio_date[with(ratio_date,order(category_id,sp_usr_id)), ];
View(ratio_date_cat)
ratio_date_cat <- ratio_date[with(ratio_date,order(category_id)), ];
View(ratio_date_cat)
ratio_date_cat <- ratio_date[with(ratio_date,order("category_id")), ];
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(dataAll)
unique(dataAll$category_id)
order(unique(dataAll$category_id))
order(unique(dataAll$category_id),1)
uniq_cat<-unique(dataAll$category_id)
uniq_cat[order(uniq_cat)]
dim(uniq_cat)
length(uniq_cat)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
head(tmp_sp)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(tmp_cat)
uniq_sp <- unique(tmp_cat);
uniq_sp <- uniq_sp[order(uniq_sp),];
uniq_sp
uniq_sp <- unique(tmp_cat);
uniq_sp
uniq_sp <- unique(tmp_cat$category_id);
uniq_sp <- uniq_sp[order(uniq_sp),];
uniq_sp
uniq_sp <- unique(tmp_cat$sp_usr_id);
uniq_sp <- uniq_sp[order(uniq_sp),];
uniq_sp
uniq_sp <- uniq_sp[order(uniq_sp),];
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
uniq_sp
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(tmp_sp)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(tmp_sp)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(ratio_date)
ratio_date <- ratio_date[-1,];
ratio_date <- xts(ratio_date[,-1],order.by = as.POSIXct(ratio_date[,1]));
ep <- endpoints(ratio_date,'hours');
tmp_ep <- period.apply(ratio_date[,2],ep,mean);
View(tmp_ep)
tmp_data <- tmp_ep[,1];
plot(tmp_data)
plot(tmp_data[,1])
hist(tmp_data)
View(tmp_sp)
ratio_date <- ratio_date[with(ratio_date,order("hr")), ];
View(ratio_date)
View(tmp_ep)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(tmp_hr)
View(tmp_sp)
View(tmp_cat)
View(tmp_cat[order(tmp_cat$time)])
View(tmp_cat[order(tmp_cat$time),])
View(tmp_hr)
View(ratio_date)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(ratio_date)
View(ratio_date[order(ratio_date$hr),])
View(ratio_date[order(ratio_date$hr),])
View(tmp_ep)
dim(tmp_ep)[1]
dim(ratio_date)
tmp_data <- tmp_ep[,1];
tmp_data <- cbind(tmp_data,seq(1,dim(tmp_ep)[1]));
colnames(tmp_data)[2] <- "hr";
View(tmp_data)
reg_gam <- gamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
reg_gam <- gamlss(in_qt_ratio ~ 0+hr, data=ratio_date,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
reg_gam <- gamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
tmp_sum <- summary(reg_gam)
reg_gam$mu.coefficients
reg_gam$mu.coefficients
summary(reg_gam)
coef(reg_gam)
summary(reg_gam)$coefficients[,4]
summary(reg_gam)$mu.coefficients[,4]
summary(reg_gam)$mu.coefficient[,4]
summary(reg_gam)$mu.coefficient
reg_gam$mu.coefficient
reg_gam$mu.coefficient[,4]
coef(summary(reg_gam))
reg_gam$mu.pen
reg_gam$mu.terms
reg_gam$mu.fv
reg_gam$mu.lp
reg_gam$mu.x
reg_gam$mu.qr
reg_gam$p-value
reg_gam$pvalue
reg_gam$mu.coef.table
tmp_sum <- summary(reg_gam,save=TRUE)
tmp_sum$mu.coef.table
str(tmp_sum)
str(tmp_sum)$pvalue
tmp_sum$pvalue
tmp_sum$pvalue[1]
reg_gam$pvalue
c(reg_gam$mu.coefficients,tmp_sum$pvalue)
c(reg_gam$mu.coefficients,tmp_sum$pvalue[1])
c(reg_gam$mu.coefficients,tmp_sum$pvalue[1],tmp_sum$std.error)
c(reg_gam$mu.coefficients,tmp_sum$pvalue[1],tmp_sum$Std.Error)
c(reg_gam$mu.coefficients,tmp_sum$pvalue[1],tmp_sum$se)
c(reg_gam$mu.coefficients,tmp_sum$pvalue[1],tmp_sum$se[1])
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
c(reg_gam$mu.coefficients,tmp_sum$se[1],tmp_sum$pvalue[1])c
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
str_coef[k,1] <- reg_gam$mu.coefficients; str_coef[k,2] <- tmp_sum$se[1]; str_coef[k,3] <- tmp_sum$pvalue[1];
k
str_coef[k,1] <- reg_gam$mu.coefficients;
str_coef[k,2] <- tmp_sum$se[1];
str_coef[k,3] <- tmp_sum$pvalue[1];
tmp_sum$se[1]
tmp_sum$pvalue
tmp_sum$pvalue
tmp_sum$pvalue[1]
source('~/.active-rstudio-document', echo=TRUE)
tmp_sum
tmp_sum[1,4]
str_coef[k,1] <- tmp_sum[1,1];
str_coef[k,2] <- tmp_sum[1,2];
str_coef[k,3] <- tmp_sum[1,4];
head(str_coef)
colnames(str_coef) <- c("Coefficient","Std. Error", "p-value")
source('~/.active-rstudio-document', echo=TRUE)
head(str_coef)
source('~/.active-rstudio-document', echo=TRUE)
head(str_coef)
head(str_coef)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
k
View(tmp_data)
gamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
View(tmp_data)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(ratio_date)
View(tmp_data)
reg_gam <- gamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "log", nu.link = "log", tau.link = "log"))
hist(tmp_data[,1])
hist(tmp_data[,1])
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
str_coef
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(tmp_data)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
reg_gam <- tryCatch(hgamlss(in_qt_ratio ~ 0+hr, data=tmp_data,
family=BEINF(mu.link = "logit", sigma.link = "logit", nu.link = "log", tau.link = "log")), error=function(e) NULL );
tmp_sum <- summary(reg_gam);
tmp_sum
tmp_sum[1]
tmp_sum[1]==0
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(str_coef)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
tmp_sum
summary(reg_gam)
reg_gam
k
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
tmp_sum
tmp_sum[1]
k
tmp_sum
tmp_sum[1]
tmp_sum[1]==0
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(str_coef)
sum(str_coef[,4]<=0.05)
which(str_coef[,4]<=0.05)
which(str_coef[,4]<=0.05 & str_coef[,4]!=0)
length(which(str_coef[,4]<=0.05 & str_coef[,4]!=0))
str_coef$Std. Error[(which(str_coef[,4]<=0.05 & str_coef[,4]!=0))]
str_coef$Std.Error[(which(str_coef[,4]<=0.05 & str_coef[,4]!=0))]
str_coef$Std. Error[(which(str_coef[,4]<=0.05 & str_coef[,4]!=0))]
str_coef[(which(str_coef[,4]<=0.05 & str_coef[,4]!=0)),2]
View(tmp_cat)
tmp_cat$name[1]
str_coef[k,5] <- tmp_cat$name[1]
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(str_coef)
ratio_date[1,5]
tmp_cat$name[1]
str_coef[k,5] <- tmp_cat$name[1];
str_coef[k,5] <- tmp_cat[14,1]
View(str_coef)
tmp_cat[14,1]
tmp_cat[13,1]
tmp_cat[1,14]
str_coef[k,5] <- tmp_cat[1,14]
View(str_coef)
str_coef[k,5] <- as.character(tmp_cat[1,14])
View(str_coef)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(str_coef)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(str_coef)
write.xlsx(str_coef,"coef_cat.xlsx")
save(str_coef,file="coef_cat.Rda");
sig_coef_cat <- subset(str_coef,str_coef!=0 & str_coef<=0.05)
View(sig_coef_cat)
sig_coef_cat <- subset(str_coef,str_coef$p-value!=0 & str_coef$p-value<=0.05)
sig_coef_cat <- subset(str_coef,str_coef[,4]!=0 & str_coef[,4]<=0.05)
View(sig_coef_cat)
save(sig_str_coef,file="sig_coef_cat.Rda");
save(sig_coef_cat,file="sig_coef_cat.Rda");
sig_coef_cat <- sig_coef_cat[oredr(sig_coef_cat$Coefficient),]
sig_coef_cat <- sig_coef_cat[order(sig_coef_cat$Coefficient),]
View(sig_coef_cat)
sig_coef_cat <- sig_coef_cat[order(-sig_coef_cat$Coefficient),]
View(sig_coef_cat)
save(sig_coef_cat,file="sig_coef_cat.Rda");
write.xlsx(sig_coef_cat,"sig_coef_cat.xlsx")
insig_coef_cat <- subset(str_coef,str_coef[,4]!=0 & str_coef[,4]>=0.05)
insig_coef_cat <- sig_coef_cat[order(-sig_coef_cat$Coefficient),]
write.xlsx(insig_coef_cat,"insig_coef_cat.xlsx")
no_coef_cat <- subset(str_coef,str_coef[,4]==0)
write.xlsx(no_coef_cat,"no_coef_cat.xlsx")
save(insig_coef_cat,file="insig_coef_cat.Rda");
save(no_coef_cat,file="no_coef_cat.Rda");
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(tmp_cat)
View(tmp_cat)
View(str_coef)
tmp_cat$place
tmp_cat$place[1]
View(str_coef)
as.character(tmp_cat$place[1])
View(tmp_cat)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
as.character(tmp_cat$place[1])
View(tmp_cat)
View(str_coef)
source('~/myGitCode/thumbTack/metricAnalysis_v3.R', echo=TRUE)
View(str_coef)
insig_coef_loc <- subset(str_coef,str_coef[,4]!=0 & str_coef[,4]>=0.05)
sig_coef_loc <- subset(str_coef,str_coef[,4]!=0 & str_coef[,4]<=0.05)
View(sig_coef_loc)
View(insig_coef_loc)
sig_coef_loc <- subset(str_coef,str_coef[,4]!=0 & str_coef[,4]<=0.1)
insig_coef_cat <- subset(str_coef,str_coef[,4]!=0 & str_coef[,4]>=0.1)
View(sig_coef_loc)
View(insig_coef_loc)
sig_coef_loc <- sig_coef_cat[order(-sig_coef_cat$Coefficient),]
sig_coef_loc <- sig_coef_loc[order(-sig_coef_loc$Coefficient),]
View(sig_coef_loc)
save(str_coef,file="coef_loc.Rda");
save(sig_coef_loc,file="sig_coef_loc.Rda");
save(insig_coef_loc,file="insig_coef_loc.Rda");
write.xlsx(str_coef,"coef_loc.xlsx")
write.xlsx(sig_coef_loc,"sig_coef_loc.xlsx")
write.xlsx(insig_coef_loc,"insig_coef_loc.xlsx")
load(file="hr_ratio.Rda");
ep <- endpoints(ratio_date,'hours');
tmp_ep <- period.apply(ratio_date[,2],ep,mean);
tmp_data <- tmp_ep[,1];
tmp_data <- cbind(tmp_data,seq(1,1502));
colnames(tmp_data)[2] <- "hr";
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
plot(tmp_data[,1], main="Hourly Invite-to-Quote Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19);
dev.off();
pdf(file = ifelse(TRUE, "hr_dist.pdf"));           # Save plot.
hist(tmp_ep[,1], main="Distribution of Hourly Invite-to-Quote Ratio per Hour",
xlab="Ratio", ylab="Frequency", pch=19, cex=1.2);
dev.off();
pdf(file = ifelse(TRUE, "hr_dist.pdf"));           # Save plot.
hist(tmp_ep[,1], main="Distribution of Hourly Quote-to-Invite Ratio per Hour",
xlab="Ratio", ylab="Frequency", pch=19, cex=1.3);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
plot(tmp_data[,1], main="Hourly Quote-to-Invite Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19, cex=1.3);
dev.off();
pdf(file = ifelse(TRUE, "hr_dist.pdf"));           # Save plot.
hist(tmp_ep[,1], main="Distribution of Quote-to-Invite Ratio",
xlab="Ratio", ylab="Frequency", pch=19, cex=1.3);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
plot(tmp_data[,1], main="Hourly Quote-to-Invite Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19, cex=1.3);
dev.off();
pdf(file = ifelse(TRUE, "hr_dist.pdf"));           # Save plot.
hist(tmp_ep[,1], main="Distribution of Quote-to-Invite Ratio",
xlab="Ratio", ylab="Frequency", pch=19, cex=1.5);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
plot(tmp_data[,1], main="Hourly Quote-to-Invite Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19, cex=1.5);
dev.off();
pdf(file = ifelse(TRUE, "hr_dist.pdf"));           # Save plot.
hist(tmp_ep[,1], main="Distribution of Quote-to-Invite Ratio",
xlab="Ratio", ylab="Frequency", pch=19, cex=2);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
plot(tmp_data[,1], main="Quote-to-Invite Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19, cex=2);
dev.off();
pdf(file = ifelse(TRUE, "hr_dist.pdf"));           # Save plot.
hist(tmp_ep[,1], main="Distribution of Quote-to-Invite Ratio",
xlab="Ratio", ylab="Frequency", pch=19, cex=3);
dev.off();
pdf(file = ifelse(TRUE, "hr_plot.pdf"));           # Save plot.
plot(tmp_data[,1], main="Quote-to-Invite Ratio Vs Time",
xlab="Time", ylab="Ratio", pch=19, cex=3);
dev.off();
View(ratio_date)
library("gamlss");
require("gamlss");
size_count <- length(unique(dataAll$location_id));
size_count
source('~/myGitCode/thumbTack/metricAnalysis_v2.R', echo=TRUE)
View(ratio_date)
View(ratio_date)
